version: "3.5"
services:
  test_postgres:
    image: "postgres:latest"
    container_name: test_postgres
    ports:
      - "13081:5432"
    volumes:
      - ./dev/SQL:/docker-entrypoint-initdb.d/
      # - ./gen:/home/gen/
      # - ./config_postgres.conf:/etc/postgresql.conf
      - ./dev/log:/var/log/
    environment:
      POSTGRES_USER: test
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: test
    networks:
      - mynetwork

  redis-session:
    image: redis:latest
    command: --requirepass "ws_redis_password"
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  redis-cache:
    image: redis:latest
    command: --requirepass "ws_redis_password"
    ports:
      - "6380:6379"
    networks:
      - mynetwork
  app:
    build: .
    container_name: app
    restart: always
    depends_on: 
      - test_postgres
    ports:
      - "8080:8080"
    networks:
      - mynetwork
  benchmark:
    build:
        context: ./
        dockerfile: benchmark.Dockerfile
    container_name: benchmark
    restart: always
    ports:
      - "8081:8081"
    networks:
      - mynetwork
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    networks:
      - mynetwork
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./benchmark/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  grafana_data: