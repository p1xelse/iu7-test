{"name":"TestCreateEntry","fullName":"TestEntryTestIntegrationSuite/EntryTestIntegrationSuite/TestCreateEntry","status":"failed","statusDetails":{"message":"\t[123 34 98 111 100 121 34 58 123 34 105 100 34 58 48 44 34 117 115 101 114 95 105 100 34 58 49 44 34 112 114 111 106 101 99 116 95 105 100 34 58 110 117 108 108 44 34 100 101 115 99 114 105 112 116 105 111 110 34 58 34 101 110 116 114 121 34 44 34 116 97 103 95 108 105 115 116 34 58 91 93 44 34 116 105 109 101 95 115 116 97 114 116 34 58 34 50 48 50 51 45 49 48 45 48 51 84 49 56 58 49 55 58 50 51 46 56 48 48 57 57 56 43 48 51 58 48 48 34 44 34 116 105 109 101 95 101 110 100 34 58 34 50 48 50 51 45 49 48 45 48 51 84 50 48 58 49 55 58 50 51 46 56 48 48 57 57 56 43 48 51 58 48 48 34 44 34 100 117 114 97 116 105 111 110 34 58 34 50 104 48 109 48 115 34 125 125 10]","trace":"\n\n\tError Trace:\t/Users/d.neumoin/go/pkg/mod/github.com/ozontech/allure-go/pkg/framework@v0.6.28/asserts_wrapper/wrapper/wrapper.go:105\n\t            \t\t\t\t/Users/d.neumoin/go/pkg/mod/github.com/ozontech/allure-go/pkg/framework@v0.6.28/asserts_wrapper/wrapper/helper.go:37\n\t            \t\t\t\t/Users/d.neumoin/go/pkg/mod/github.com/ozontech/allure-go/pkg/framework@v0.6.28/asserts_wrapper/wrapper/wrapper.go:101\n\t            \t\t\t\t/Users/d.neumoin/go/pkg/mod/github.com/ozontech/allure-go/pkg/framework@v0.6.28/asserts_wrapper/helper/helper.go:32\n\t            \t\t\t\t/Users/d.neumoin/iu7-test/src/integration_test/delivery_usecase/entry_test.go:94\n\tError:      \tNot equal: \n\t            \texpected: *common.Common(\u0026common.Common{TestingT:(*testing.T)(0xc000103d40), Provider:(*manager.allureManager)(0xc0002dc390), assert:(*helper.a)(0xc0002b4600), require:(*helper.a)(0xc0002b4620), xSkip:false, wg:sync.WaitGroup{noCopy:sync.noCopy{}, state:atomic.Uint64{_:atomic.noCopy{}, _:atomic.align64{}, v:0x0}, sema:0x0}})\n\t            \tactual  : []uint8([]byte{0x7b, 0x22, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x6e, 0x75, 0x6c, 0x6c, 0x2c, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x2c, 0x22, 0x74, 0x61, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3a, 0x5b, 0x5d, 0x2c, 0x22, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x3a, 0x22, 0x32, 0x30, 0x32, 0x33, 0x2d, 0x31, 0x30, 0x2d, 0x30, 0x33, 0x54, 0x31, 0x38, 0x3a, 0x31, 0x37, 0x3a, 0x32, 0x33, 0x2e, 0x38, 0x30, 0x30, 0x39, 0x39, 0x38, 0x2b, 0x30, 0x33, 0x3a, 0x30, 0x30, 0x22, 0x2c, 0x22, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x22, 0x3a, 0x22, 0x32, 0x30, 0x32, 0x33, 0x2d, 0x31, 0x30, 0x2d, 0x30, 0x33, 0x54, 0x32, 0x30, 0x3a, 0x31, 0x37, 0x3a, 0x32, 0x33, 0x2e, 0x38, 0x30, 0x30, 0x39, 0x39, 0x38, 0x2b, 0x30, 0x33, 0x3a, 0x30, 0x30, 0x22, 0x2c, 0x22, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 0x32, 0x68, 0x30, 0x6d, 0x30, 0x73, 0x22, 0x7d, 0x7d})\n\tTest:       \tTestCreateEntry\n\tMessages:   \t[123 34 98 111 100 121 34 58 123 34 105 100 34 58 48 44 34 117 115 101 114 95 105 100 34 58 49 44 34 112 114 111 106 101 99 116 95 105 100 34 58 110 117 108 108 44 34 100 101 115 99 114 105 112 116 105 111 110 34 58 34 101 110 116 114 121 34 44 34 116 97 103 95 108 105 115 116 34 58 91 93 44 34 116 105 109 101 95 115 116 97 114 116 34 58 34 50 48 50 51 45 49 48 45 48 51 84 49 56 58 49 55 58 50 51 46 56 48 48 57 57 56 43 48 51 58 48 48 34 44 34 116 105 109 101 95 101 110 100 34 58 34 50 48 50 51 45 49 48 45 48 51 84 50 48 58 49 55 58 50 51 46 56 48 48 57 57 56 43 48 51 58 48 48 34 44 34 100 117 114 97 116 105 111 110 34 58 34 50 104 48 109 48 115 34 125 125 10]\n"},"start":1696346243800,"stop":1696346243803,"uuid":"f4486cd2-61ff-11ee-8c56-acde48001122","historyId":"ff33069a509c65b93ba0ad21444d91a3","testCaseId":"0ef2762b31c290f689cef0008b899ad9","labels":[{"name":"language","value":"go1.21.0"},{"name":"framework","value":"Allure-Go@v0.6.0"},{"name":"host","value":"d-neumoin"},{"name":"thread","value":"TestEntryTestIntegrationSuite/EntryTestIntegrationSuite/TestCreateEntry"},{"name":"suite","value":"EntryTestIntegrationSuite"},{"name":"package","value":"timetracker/integration_test/delivery_usecase"}],"steps":[{"name":"REQUIRE: No Error","status":"passed","start":1696346243802,"stop":1696346243802,"parameters":[{"name":"Actual","value":"\u003cnil\u003e"}]},{"name":"REQUIRE: No Error","status":"passed","start":1696346243802,"stop":1696346243802,"parameters":[{"name":"Actual","value":"\u003cnil\u003e"}]},{"name":"REQUIRE: No Error","status":"passed","start":1696346243802,"stop":1696346243802,"parameters":[{"name":"Actual","value":"\u003cnil\u003e"}]},{"name":"ASSERT: Equal","status":"passed","start":1696346243802,"stop":1696346243802,"parameters":[{"name":"Expected","value":"201"},{"name":"Actual","value":"201"}]},{"name":"ASSERT: [123 34 98 111 100 121 34 58 123 34 105 100 34 58 48 44 34 117 115 101 114 95 105 100 34 58 49 44 34 112 114 111 106 101 99 116 95 105 100 34 58 110 117 108 108 44 34 100 101 115 99 114 105 112 116 105 111 110 34 58 34 101 110 116 114 121 34 44 34 116 97 103 95 108 105 115 116 34 58 91 93 44 34 116 105 109 101 95 115 116 97 114 116 34 58 34 50 48 50 51 45 49 48 45 48 51 84 49 56 58 49 55 58 50 51 46 56 48 48 57 57 56 43 48 51 58 48 48 34 44 34 116 105 109 101 95 101 110 100 34 58 34 50 48 50 51 45 49 48 45 48 51 84 50 48 58 49 55 58 50 51 46 56 48 48 57 57 56 43 48 51 58 48 48 34 44 34 100 117 114 97 116 105 111 110 34 58 34 50 104 48 109 48 115 34 125 125 10]","status":"failed","start":1696346243802,"stop":1696346243802,"parameters":[{"name":"Expected","value":"*common.Common(\u0026common.Common{TestingT:(*testing.T)(0xc000103d40), Provider:(*manager.allureManager)(0xc0002dc390), assert:(*helper.a)(0xc0002b4600), require:(*helper.a)(0xc0002b4620), xSkip:false, wg:sync.WaitGroup{noCopy:sync.noCopy{}, state:atomic.Uint64{_:atomic.noCopy{}, _:atomic.align64{}, v:0x0}, sema:0x0}})"},{"name":"Actual","value":"[]uint8([]byte{0x7b, 0x22, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x3a, 0x7b, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x3a, 0x6e, 0x75, 0x6c, 0x6c, 0x2c, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x2c, 0x22, 0x74, 0x61, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3a, 0x5b, 0x5d, 0x2c, 0x22, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x22, 0x3a, 0x22, 0x32, 0x30, 0x32, 0x33, 0x2d, 0x31, 0x30, 0x2d, 0x30, 0x33, 0x54, 0x31, 0x38, 0x3a, 0x31, 0x37, 0x3a, 0x32, 0x33, 0x2e, 0x38, 0x30, 0x30, 0x39, 0x39, 0x38, 0x2b, 0x30, 0x33, 0x3a, 0x30, 0x30, 0x22, 0x2c, 0x22, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x22, 0x3a, 0x22, 0x32, 0x30, 0x32, 0x33, 0x2d, 0x31, 0x30, 0x2d, 0x30, 0x33, 0x54, 0x32, 0x30, 0x3a, 0x31, 0x37, 0x3a, 0x32, 0x33, 0x2e, 0x38, 0x30, 0x30, 0x39, 0x39, 0x38, 0x2b, 0x30, 0x33, 0x3a, 0x30, 0x30, 0x22, 0x2c, 0x22, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x22, 0x32, 0x68, 0x30, 0x6d, 0x30, 0x73, 0x22, 0x7d, 0x7d})"}]}]}